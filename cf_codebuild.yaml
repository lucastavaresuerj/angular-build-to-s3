AWSTemplateFormatVersion: 2010-09-09
Description: Using code build to deploy an angular project into S3
Parameters:
  GitHubOwner:
    Type: String
    AllowedPattern: "[A-Za-z0-9-]+"
    Default: quick-refs
  GitHubRepository:
    Type: String
    AllowedPattern: "[A-Za-z0-9-]+"
  GitHubBranch:
    Type: String
    AllowedPattern: "[A-Za-z0-9-]+"
    Default: main
  CodeBuildEnvironmentImage:
    Type: String
    Default: "aws/codebuild/standard:4.0"

Resources:
  S3BucketWebSite:
    Type: "AWS::S3::Bucket"
    Properties:
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: index.html
    DeletionPolicy: Retain

  ReadPolicy:
    Type: "AWS::S3::BucketPolicy"
    Properties:
      Bucket: !Ref S3BucketWebSite
      PolicyDocument:
        Statement:
          - Action: "s3:GetObject"
            Effect: Allow
            Resource: !Sub "arn:aws:s3:::${S3BucketWebSite}/*"
            Principal:
              CanonicalUser: !GetAtt CloudFrontOriginAccessIdentity.S3CanonicalUserId
          - Action: "*"
            Effect: Allow
            Resource: !Sub "arn:aws:s3:::${S3BucketWebSite}"
            Principal: "*"
          - Action: "*"
            Effect: Allow
            Resource: !Sub "arn:aws:s3:::${S3BucketWebSite}/*"
            Principal: "*"

  CloudFrontOriginAccessIdentity:
    Type: "AWS::CloudFront::CloudFrontOriginAccessIdentity"
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: !Ref S3BucketWebSite

  CloudFrontDistribution:
    Type: "AWS::CloudFront::Distribution"
    Properties:
      DistributionConfig:
        CustomErrorResponses:
          - ErrorCode: 403 # not found
            ResponseCode: 404
            ResponsePagePath: "/index.html"
        DefaultCacheBehavior:
          AllowedMethods:
            - GET
            - HEAD
            - OPTIONS
          CachedMethods:
            - GET
            - HEAD
            - OPTIONS
          Compress: true
          DefaultTTL: 3600 # in seconds
          ForwardedValues:
            Cookies:
              Forward: none
            QueryString: false
          MaxTTL: 86400 # in seconds
          MinTTL: 60 # in seconds
          TargetOriginId: s3origin
          ViewerProtocolPolicy: "allow-all"
        DefaultRootObject: "index.html"
        Enabled: true
        HttpVersion: http2
        Origins:
          - DomainName: !GetAtt "S3BucketWebSite.DomainName"
            Id: s3origin
            S3OriginConfig:
              OriginAccessIdentity: !Sub "origin-access-identity/cloudfront/${CloudFrontOriginAccessIdentity}"
        PriceClass: "PriceClass_All"

  CodeBuildServiceRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: "sts:AssumeRole"
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: CloudWatchLogsPolicy
                Effect: Allow
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource:
                  - "*"
              - Sid: S3GetObjectPolicy
                Effect: Allow
                Action:
                  - "s3:GetObject"
                  - "s3:GetObjectVersion"
                Resource:
                  - !Sub "arn:aws:s3:::${S3BucketWebSite}/*"
              - Sid: S3PutObjectPolicy
                Effect: Allow
                Action:
                  - "s3:PutObject"
                  - "s3:PutObjectAcl"
                Resource:
                  - !Sub "arn:aws:s3:::${S3BucketWebSite}/*"
              - Sid: S3DeleteObjectPolicy
                Effect: Allow
                Action:
                  - "s3:DeleteObject"
                Resource:
                  - !Sub "arn:aws:s3:::${S3BucketWebSite}/*"
              - Sid: S3BucketIdentity
                Effect: Allow
                Action:
                  - "s3:GetBucketAcl"
                  - "s3:GetBucketLocation"
                Resource:
                  - !Sub "arn:aws:s3:::${S3BucketWebSite}/*"

  CodeBuildSourceCredential:
    Type: "AWS::CodeBuild::SourceCredential"
    Properties:
      AuthType: PERSONAL_ACCESS_TOKEN
      ServerType: GITHUB
      Token: >-
        {{resolve:secretsmanager:github-access-token:SecretString:GITHUB_ACCESS_TOKEN}}

  CodeBuilProject:
    Type: "AWS::CodeBuild::Project"
    Properties:
      Name: !Ref "AWS::StackName"
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      Source:
        Type: GITHUB
        Location: !Sub "https://github.com/${GitHubOwner}/${GitHubRepository}.git"
        BuildSpec: buildspec.yaml
        Auth:
          Type: OAUTH
          Resource: !Ref CodeBuildSourceCredential
      Artifacts:
        Type: NO_ARTIFACTS
      Triggers:
        Webhook: true
        FilterGroups:
          - - Type: EVENT
              Pattern: PUSH
            - Type: HEAD_REF
              Pattern: !Sub "^refs/heads/${GitHubBranch}$"
            - Type: COMMIT_MESSAGE
              Pattern: \[build\]
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: !Ref CodeBuildEnvironmentImage
        EnvironmentVariables:
          - Name: ENV_NAME
            Value: build
          - Name: S3_BUCKET_NAME
            Value: !Ref S3BucketWebSite

Outputs:
  WebsiteURL:
    Value: !GetAtt S3BucketWebSite.WebsiteURL
    Description: URL for website hosted on S3
  DistributionId:
    Description: "CloudFront Distribution ID"
    Value: !Ref CloudFrontDistribution
  Domain:
    Description: "Cloudfront Domain"
    Value: !GetAtt CloudFrontDistribution.DomainName
